---
import type {
	SkillDataJSONArray,
	StatisticChange,
} from "../../../public/data/SkillDataStructure";

interface Props {
	skillObject: SkillDataJSONArray;
}

const { skillObject } = Astro.props;

function GetHeaderRight(skill: SkillDataJSONArray) {
	if (skill.CastData) {
		return "Cast : " + skill.CastData.Type;
	}
	//
	if (skill.TriggerData) {
		return "Trigger : " + skill.TriggerData.Type;
	}
	//
	return "unset";
}
function GetHeaderLeft(skill: SkillDataJSONArray) {
	if (skill.Type) {
		return "Type : " + skill.Type;
	}
	//
	return "unset";
}
function GetStatColor(statAmount: number) {
	if (statAmount > 0) {
		return "color:#7cbcbf; font-size:1.1em;";
	} else {
		return "color:#e07384; font-size:1.1em;";
	}
}
function GetStatHighlightStatistic() {
	return "color:#65a1e6; font-size:1.1em;";
}
function GetStatHighlightTargeting() {
	return "color:#f2ce67; font-size:1.1em;";
}
---

<div class="entity-origin-class-reference">
	<div id="entity-class-link">
		<a>{GetHeaderLeft(skillObject)}</a>
	</div>
	<div id="entity-origin-link">
		<a>{GetHeaderRight(skillObject)}</a>
	</div>
</div>
<div style="margin-top:2rem;" class="skill-panel">
	{
		skillObject.OccurenceData.map((occurence) => {
			return (
				<div class="skill-panel-occurence">
					<div class="skill-panel-occurence-title">
						<p>{occurence.TargetingInput}</p>
						<p>{occurence.MultiplierData}</p>
					</div>
					{occurence.StatisticChanges.map((statChange) => {
						let statChangePercentageBasedText =
							statChange.PercentageBasedOnCaster ? "Caster" : "Target";
						//
						return (
							<div class="skill-panel-statistic-change">
								<li>
									Change
									<b style={GetStatHighlightStatistic()}>
										{statChange.TargetStat}
									</b>
									by
									<b style={GetStatColor(statChange.FlatChange)}>
										{statChange.FlatChange !== 0
											? (statChange.FlatChange > 0 ? "+" : "") +
											  statChange.FlatChange
											: ""}
									</b>
									{statChange.FlatChange !== 0 &&
									statChange.PercentageChange !== 0
										? "and"
										: ""}
									<b style={GetStatColor(statChange.PercentageChange)}>
										{statChange.PercentageChange !== 0
											? (statChange.PercentageChange > 0 ? "+" : "") +
											  statChange.PercentageChange +
											  "% " +
											  statChange.PercentageStat
											: ""}
									</b>
									{statChange.PercentageChange !== 0 ? " of " : ""}
									<b style={GetStatHighlightTargeting()}>
										{statChange.PercentageChange !== 0
											? statChangePercentageBasedText
											: ""}
									</b>
								</li>
							</div>
						);
					})}
				</div>
			);
		})
	}
</div>

<style>
	.skill-panel {
		background-color: var(--theme-code-bg);
		border-color: var(--theme-code-tabs);
		border-style: dashed;
		border-radius: 25px;
		width: 100%;
		height: fit-content;
		padding: 20px;
		gap: 20px;
		display: flex;
		justify-content: flex-start;
		flex-direction: column;
		align-items: center;
	}
	.skill-panel-occurence {
		width: 100%;
		background-color: var(--theme-code-tabs);
		border-radius: 30px;
		border-color: var(--theme-code-bg);
		border-style: dashed;
		transition: ease-in-out 0.25s;
		z-index: 1;
	}
	.skill-panel-occurence:hover {
		border-color: var(--theme-accent);
		border-style: dashed;
		transition: none;
	}
	.skill-panel-occurence-title {
		font-weight: bold;
		font-size: 1.2em;
		padding: 10px;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}
	.skill-panel-statistic-change {
		background-color: var(--theme-bg);
		padding: 10px 25px 10px 25px;
		text-align: center;
	}
	.skill-panel-statistic-change:last-child {
		border-radius: 0px 0px 25px 25px;
	}

	.entity-origin-class-reference {
		width: 100%;
		display: flex;
		height: 4rem;
	}
	.entity-origin-class-reference div {
		width: inherit;
		height: inherit;
		background-color: var(--theme-navbar-bg);
		border-color: var(--theme-selection-bg);
		border-style: dashed;
		transition: ease-in-out 0.25s;
		font-weight: bold;
		font-size: 1rem;
		margin: 10px;
	}
	.entity-origin-class-reference div:hover {
		background-color: var(--theme-bg-hover);
		border-color: var(--theme-text-accent);
		border-radius: 15px;
		cursor: pointer;
	}
	.entity-origin-class-reference div a {
		vertical-align: middle;
		height: 100%;
		width: 100%;
		justify-content: center;
		display: flex;
		text-decoration: none;
	}
</style>
